{"version":3,"sources":["parts/Header.js","components/PokemonList/ViewItem/index.js","components/PokemonList/PokemonItem/index.js","parts/ListPokemonItem.js","parts/Footer.js","parts/Loading.js","store/types/type.pokemon.js","configs/axios/errorResponseHandler.js","configs/axios/index.js","constants/api/api.pokemon.js","store/actions/action.pokemon.js","pages/PokemonList.js","pages/PokemonDetail.js","pages/MyPokemonList.js","assets/img/notfound.jpg","pages/NotFound.js","App.js","reportWebVitals.js","store/utility.js","store/reducers/reducer.pokemon.js","store/reducers/reducer.mypokemon.js","store/reducers/index.js","store/index.js","index.js"],"names":["Header","props","className","InputItem","value","name","productId","min","max","adjust","join","onClick","productRemoved","document","addEventListener","play","id","readOnly","type","productAdded","motion","querySelector","window","requestAnimationFrame","time","defaultProps","ProductItem","pokemonId","pokemon","withRouter","useDispatch","countering","quantity","Footer","Loading","FETCH_POKEMON_LIST","FETCH_POKEMON_LIST_SUCCESS","FETCH_POKEMON_LIST_FAILED","errorResponseHandler","error","message","navigator","onLine","toast","Promise","reject","response","status","statusText","data","instance","axios","create","baseURL","process","interceptors","use","url","get","initPokemon","payload","dispatch","actionTypesPokemon","fetchPokemons","then","console","log","count","next","previous","pokemons","results","fetchPokemonsSuccess","catch","fetchPokemonsFailed","history","POKEMON","useSelector","state","MYPOKEMON","mypokemon","useEffect","title","scroll","loading","counter","totalOwnPokemon","Object","values","map","item","index","split","replace","push","NotFound","src","notfound","alt","to","App","createBrowserHistory","basename","exact","path","component","PokemonList","PokemonDetail","MyPokemonList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","updateObject","oldObject","updatedProperties","initialState","SelectedPokemonLoading","total","selectedPokemon","nextUrl","prevUrl","currentPage","action","o","reducer","combineReducers","middleware","thunk","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","devTools","applyMiddleware","store","createStore","persistor","persistStore","configureStore","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfe6e6b7.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Counter from \"../components/Counter/index\";\n\nexport default function Header(props) {\n    return (\n        <header className=\"site-header p-6 mb-4 rounded-b-3xl bg-blue-600 text-center text-white text-4xl font-extrabold\">\n            Pokemon World\n            {/* <Counter counter={props.counter}></Counter> */}\n        </header>\n    );\n}\n","import React from \"react\";\n\nexport default function InputItem(props) {\n    const { value, name, productId, min, max } = props;\n\n    const minus = () => {\n        if (value > min) {\n            props.productRemoved();\n            document.addEventListener(\"click\", play(\"right\"), false);\n        }\n    };\n\n    const plus = () => {\n        if (value < max) {\n            props.productAdded();\n            document.addEventListener(\"click\", play(\"left\"), false);\n        }\n    };\n\n    return (\n        <>\n            {props.adjust ? (\n                <div\n                    className={[\"input-item inline-flex\", props.className].join(\n                        \" \"\n                    )}\n                >\n                    <button\n                        className=\"runSlide py-2 px-2 sm:px-4 bg-red-500 hover:bg-red-700 focus:outline-none border border-red-500 rounded-l-lg text-white font-bold text-xl\"\n                        onClick={minus}\n                    >\n                        -\n                    </button>\n                    <input\n                        min={min}\n                        max={max}\n                        name={name}\n                        id={productId}\n                        readOnly\n                        type=\"text\"\n                        value={props.value}\n                        className=\"w-full py-2 bg-gray-200 hover:bg-gray-400 disabled:opacity-75 focus:outline-none text-gray-600 text-center font-extrabold select-none\"\n                    />\n                    <button\n                        className=\"runSlide py-2 px-2 sm:px-4 bg-green-500 hover:bg-green-700  focus:outline-none  border border-green-500 rounded-r-lg text-white font-bold text-xl\"\n                        onClick={plus}\n                    >\n                        +\n                    </button>\n                </div>\n            ) : (\n                <div\n                    className={[\"input-item inline-flex\", props.className].join(\n                        \" \"\n                    )}\n                >\n                    <input\n                        min={min}\n                        max={max}\n                        name={name}\n                        id={productId}\n                        readOnly\n                        type=\"text\"\n                        value={props.value}\n                        className=\"w-full py-2 bg-gray-200 hover:bg-gray-400 disabled:opacity-75 focus:outline-none text-red-600 text-center font-extrabold select-none\"\n                    />\n                </div>\n            )}\n        </>\n    );\n}\n\nfunction play(motion = \"left\") {\n    document.querySelector(\".box-counter\").className = \"box-counter\";\n    window.requestAnimationFrame(function (time) {\n        window.requestAnimationFrame(function (time) {\n            document.querySelector(\n                \".box-counter\"\n            ).className = `box-counter changing-${motion}`;\n        });\n    });\n}\n\nInputItem.defaultProps = {\n    min: 0,\n    max: 0,\n};\n","import React from \"react\";\nimport \"./index.scss\";\n\nexport default function ProductItem(props) {\n    return (\n        <>\n            <div\n                className={[\n                    \"bg-gray-200 hover:bg-gray-400\",\n                    props.className,\n                ].join(\" \")}\n            >\n                <span\n                    className=\"productName\"\n                    id={`product-name-${props.pokemonId}`}\n                >\n                    {props.pokemon ? props.pokemon : \"-\"}\n                </span>\n            </div>\n        </>\n    );\n}\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\n\nimport ViewItem from \"../components/PokemonList/ViewItem\";\nimport PokemonItem from \"../components/PokemonList/PokemonItem\";\n\nfunction ListPokemonItem(props) {\n    const dispatch = useDispatch();\n\n    const addPokemonHandler = (id) => {\n        let payload = {\n            id: id,\n        };\n    };\n\n    const removePokemonHandler = (id) => {\n        let payload = {\n            id: id,\n        };\n    };\n\n    return (\n        <>\n            <span className=\"w-2/12 sm:w-1/12 p-2 bg-gray-200 hover:bg-gray-400 text-gray-800 text-center text-bold\">\n                {props.countering}\n            </span>\n            <PokemonItem\n                className=\"w-6/12 sm:w-8/12 p-2 text-gray-800 text-left text-bold\"\n                name={props.pokemonId}\n                pokemonId={props.pokemonId}\n                pokemon={props.pokemon}\n            ></PokemonItem>\n            <ViewItem\n                className=\"w-4/12 sm:w-3/12 justify-between text-center\"\n                max={props.max}\n                name={`barang-${props.pokemonId}`}\n                pokemonId={props.pokemonId}\n                quantity={props.quantity}\n                value={props.value}\n                productAdded={() => addPokemonHandler(props.pokemonId)}\n                productRemoved={() => removePokemonHandler(props.pokemonId)}\n                adjust={props.adjust}\n            ></ViewItem>\n        </>\n    );\n}\n\nexport default withRouter(ListPokemonItem);\n","import React from \"react\";\n\nexport default function Footer(props) {\n    return (\n        <footer className=\"site-footer p-6 mt-4 bg-blue-600 text-center\">\n            <span className=\"text-white text-4xl font-extrabold\">\n                Have Fun !!\n            </span>\n        </footer>\n    );\n}\n","import React from \"react\";\n\nexport default function Loading() {\n    return (\n        <>\n            <section className=\"z-10 flex flex-col justify-center items-center h-screen\">\n                <h1 className=\"animate-pulse ease duration-500 mt-12 text-3xl text-gray-900\">\n                    Please wait ...\n                </h1>\n            </section>\n        </>\n    );\n}\n","export const FETCH_POKEMON_LIST = \"FETCH_POKEMON_LIST\";\nexport const FETCH_POKEMON_LIST_SUCCESS = \"FETCH_POKEMON_LIST_SUCCESS\";\nexport const FETCH_POKEMON_LIST_FAILED = \"FETCH_POKEMON_LIST_FAILED\";\n\nexport const FETCH_POKEMON_DETAILS = \"FETCH_POKEMON_DETAILS\";\nexport const FETCH_POKEMON_DETAILS_SUCCESS = \"FETCH_POKEMON_DETAILS_SUCCESS\";\nexport const FETCH_POKEMON_DETAILS_FAILED = \"FETCH_POKEMON_DETAILS_FAILED\";\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction errorResponseHandler(error) {\n    if (error) {\n        let message;\n        if (!navigator.onLine) {\n            message = <div>Please check your internet connection.</div>;\n\n            toast.error(message);\n\n            return Promise.reject(error);\n        } else if (error.response) {\n            message = (\n                <div>\n                    {error.response.status} {error.response.statusText} <br /> [\n                    {error.response.data.message}]\n                </div>\n            );\n\n            toast.error(message);\n\n            return Promise.reject(error);\n        }\n    }\n}\n\nexport default errorResponseHandler;\n","import axios from \"axios\";\n\nimport errorResponseHandler from \"./errorResponseHandler\";\n\nconst instance = axios.create({\n    baseURL: `${process.env.REACT_APP_API_H0ST}`,\n});\n\ninstance.interceptors.response.use(\n    (response) => response,\n    errorResponseHandler\n);\n\nexport default instance;\n","import axios from \"../../configs/axios\";\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\nexport default {\n    getPokemon: (url = \"/pokemon\") => axios.get(`${url}`),\n    getPokemonDetail: (id) => axios.get(`/pokemon/${id}`),\n};\n","import * as actionTypesPokemon from \"../types/type.pokemon\";\nimport pokemon from \"../../constants/api/api.pokemon\";\n\nexport const fetchPokemons = (payload) => {\n    return {\n        type: actionTypesPokemon.FETCH_POKEMON_LIST,\n        payload: payload,\n    };\n};\n\nexport const fetchPokemonsSuccess = (payload) => {\n    return {\n        type: actionTypesPokemon.FETCH_POKEMON_LIST_SUCCESS,\n        message: payload.message,\n        count: payload.data.count,\n        next: payload.data.next,\n        url: payload.url,\n        previous: payload.data.previous,\n        pokemons: payload.data.results,\n    };\n};\n\nexport const fetchPokemonsFailed = (payload) => {\n    return {\n        type: actionTypesPokemon.FETCH_POKEMON_LIST_FAILED,\n        message: payload.message,\n    };\n};\n\nexport const initPokemon = (payload) => {\n    const { url } = payload;\n    return (dispatch) => {\n        dispatch(fetchPokemons());\n        pokemon\n            .getPokemon(url)\n            .then((response) => {\n                console.log(response);\n                let payload = {\n                    message: \"Berhasil Mengunduh Data\",\n                    data: response.data,\n                    url: url,\n                };\n                dispatch(fetchPokemonsSuccess(payload));\n            })\n            .catch((error) => {\n                console.log(error);\n                let payload = {\n                    message:\n                        \"Gagal Mengunduh Data, silahkan coba beberapa saat lagi\",\n                };\n                dispatch(fetchPokemonsFailed(payload));\n            });\n    };\n};\n\nexport const fetchSinglePokemon = (data) => {\n    return {\n        type: actionTypesPokemon.FETCH_POKEMON_DETAILS,\n        payload: data,\n    };\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Header from \"../parts/Header\";\nimport ListPokemonItem from \"../parts/ListPokemonItem\";\nimport Footer from \"../parts/Footer\";\n\nimport Loading from \"../parts/Loading\";\n\nimport { initPokemon } from \"../store/actions/action.pokemon\";\n\nfunction PokemonList({ history }) {\n    const dispatch = useDispatch();\n    const POKEMON = useSelector((state) => state.pokemon);\n    const MYPOKEMON = useSelector((state) => state.mypokemon);\n\n    // const pokeChance = () => {\n    //     const pokeChance = [0, 1].sort(() => Math.random() - 0.5)[0];\n\n    //     if (pokeChance) console.log(\"Gotcha\");\n    //     else console.log(\"Oh failed, try again!\");\n    // };\n\n    // pokeChance();\n\n    useEffect(() => {\n        document.title = \"Front End || Pokemon List Page\";\n        window.scroll(0, 0);\n        dispatch(initPokemon({ url: POKEMON.url }));\n    }, [dispatch, POKEMON.url]);\n\n    const purchaseContinueHandler = () => {\n        // const payload = {\n        //     products: POKEMON.pokemons,\n        //     totalPokemonOwn: POKEMON.COUNTPokeOwn,\n        // };\n        // dispatch(initPokemon(payload));\n        history.push(\"/checkout\");\n    };\n\n    return (\n        <>\n            {POKEMON.loading === true && <Loading></Loading>}\n            <div className=\"site-container\">\n                <Header counter={MYPOKEMON.totalOwnPokemon}></Header>\n                <main className=\"site-content\">\n                    <>\n                        <div className=\"m-4\">\n                            <span className=\"text-gray-800 text-3xl font-extrabold\">\n                                Pokemon List\n                            </span>\n                        </div>\n                    </>\n                    {POKEMON.error === true && (\n                        <>\n                            <span className=\"text-center text-xl\">\n                                <h1>{POKEMON.message}</h1>\n                            </span>\n                        </>\n                    )}\n                    {POKEMON.error === false &&\n                        (POKEMON.count > 0 ? (\n                            <>\n                                <div className=\"flex m-4 gap-2 text-center font-bold text-gray-800\">\n                                    <span className=\"w-2/12 sm:w-1/12 py-2 bg-gray-400\">\n                                        No\n                                    </span>\n                                    <span className=\"w-6/12 sm:w-8/12 py-2 bg-gray-400\">\n                                        Pokemon\n                                    </span>\n                                    <span className=\"w-4/12 sm:w-3/12  py-2 bg-gray-400\">\n                                        Total\n                                    </span>\n                                </div>\n                                {Object.values(POKEMON.pokemons)?.map?.(\n                                    (item, index) => {\n                                        let str = item.url;\n                                        let res = str.split(\n                                            \"https://pokeapi.co/api/v2/pokemon/\"\n                                        );\n                                        let id = res[1].replace(\"/\", \"\");\n\n                                        return (\n                                            <div\n                                                className=\"ListPokemonItem hover:bg-blue-400 flex m-4 gap-2\"\n                                                key={index}\n                                            >\n                                                <ListPokemonItem\n                                                    pokemon={item.name}\n                                                    pokemonId={id}\n                                                    url={item.url}\n                                                    value={\n                                                        POKEMON.pokemons[index]\n                                                            .totalOwnPokemon\n                                                    }\n                                                    quantity={0}\n                                                    max={99}\n                                                    adjust={false}\n                                                    countering={index + 1}\n                                                ></ListPokemonItem>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                                <p className=\"m-5 text-gray-700 font-bold text-xl\">\n                                    Total Pokemon : {POKEMON.count}\n                                </p>\n                            </>\n                        ) : (\n                            <>\n                                <p className=\"m-5 text-red-700 text-center text-2xl font-bold\">\n                                    Data Tidak Tersedia.\n                                </p>\n                                <p className=\"m-5 text-gray-700 font-bold text-xl\">\n                                    Total Pokemon : {POKEMON.count}\n                                </p>\n                            </>\n                        ))}\n                    <div className=\"flex justify-end m-5\">\n                        {POKEMON.error === false && (\n                            <>\n                                <button\n                                    className=\"bg-blue-500 hover:bg-blue-700 focus:outline-none p-3 m-0 text-white font-medium rounded\"\n                                    onClick={purchaseContinueHandler}\n                                >\n                                    Next\n                                </button>\n                            </>\n                        )}\n                    </div>\n                </main>\n                <Footer></Footer>\n            </div>\n        </>\n    );\n}\n\nexport default withRouter(PokemonList);\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Header from \"../parts/Header\";\nimport ListPokemonItem from \"../parts/ListPokemonItem\";\nimport Footer from \"../parts/Footer\";\n\nimport Loading from \"../parts/Loading\";\n\nimport { initPokemon } from \"../store/actions/action.pokemon\";\n\nfunction PokemonDetail({ history }) {\n    const dispatch = useDispatch();\n    const POKEMON = useSelector((state) => state.pokemon);\n    const MYPOKEMON = useSelector((state) => state.mypokemon);\n\n    // const pokeChance = () => {\n    //     const pokeChance = [0, 1].sort(() => Math.random() - 0.5)[0];\n\n    //     if (pokeChance) console.log(\"Gotcha\");\n    //     else console.log(\"Oh failed, try again!\");\n    // };\n\n    // pokeChance();\n\n    useEffect(() => {\n        document.title = \"Front End || Pokemon List Page\";\n        window.scroll(0, 0);\n        dispatch(initPokemon({ url: POKEMON.url }));\n    }, [dispatch, POKEMON.url]);\n\n    const purchaseContinueHandler = () => {\n        // const payload = {\n        //     products: POKEMON.pokemons,\n        //     totalPokemonOwn: POKEMON.COUNTPokeOwn,\n        // };\n        // dispatch(initPokemon(payload));\n        history.push(\"/checkout\");\n    };\n\n    return (\n        <>\n            {POKEMON.loading === true && <Loading></Loading>}\n            <div className=\"site-container\">\n                <Header counter={MYPOKEMON.totalOwnPokemon}></Header>\n                <main className=\"site-content\">\n                    <>\n                        <div className=\"m-4\">\n                            <span className=\"text-gray-800 text-3xl font-extrabold\">\n                                Pokemon List\n                            </span>\n                        </div>\n                    </>\n                    {POKEMON.error === true && (\n                        <>\n                            <span className=\"text-center text-xl\">\n                                <h1>{POKEMON.message}</h1>\n                            </span>\n                        </>\n                    )}\n                    {POKEMON.error === false &&\n                        (POKEMON.count > 0 ? (\n                            <>\n                                <div className=\"flex m-4 gap-2 text-center font-bold text-gray-800\">\n                                    <span className=\"w-2/12 sm:w-1/12 py-2 bg-gray-400\">\n                                        No\n                                    </span>\n                                    <span className=\"w-6/12 sm:w-8/12 py-2 bg-gray-400\">\n                                        Pokemon\n                                    </span>\n                                    <span className=\"w-4/12 sm:w-3/12  py-2 bg-gray-400\">\n                                        Total\n                                    </span>\n                                </div>\n                                {Object.values(POKEMON.pokemons)?.map?.(\n                                    (item, index) => {\n                                        let str = item.url;\n                                        let res = str.split(\n                                            \"https://pokeapi.co/api/v2/pokemon/\"\n                                        );\n                                        let id = res[1].replace(\"/\", \"\");\n\n                                        return (\n                                            <div\n                                                className=\"ListPokemonItem hover:bg-blue-400 flex m-4 gap-2\"\n                                                key={index}\n                                            >\n                                                <ListPokemonItem\n                                                    pokemon={item.name}\n                                                    pokemonId={id}\n                                                    url={item.url}\n                                                    value={\n                                                        POKEMON.pokemons[index]\n                                                            .totalOwnPokemon\n                                                    }\n                                                    quantity={0}\n                                                    max={99}\n                                                    adjust={false}\n                                                    countering={index + 1}\n                                                ></ListPokemonItem>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                                <p className=\"m-5 text-gray-700 font-bold text-xl\">\n                                    Total Pokemon : {POKEMON.count}\n                                </p>\n                            </>\n                        ) : (\n                            <>\n                                <p className=\"m-5 text-red-700 text-center text-2xl font-bold\">\n                                    Data Tidak Tersedia.\n                                </p>\n                                <p className=\"m-5 text-gray-700 font-bold text-xl\">\n                                    Total Pokemon : {POKEMON.count}\n                                </p>\n                            </>\n                        ))}\n                    <div className=\"flex justify-end m-5\">\n                        {POKEMON.error === false && (\n                            <>\n                                <button\n                                    className=\"bg-blue-500 hover:bg-blue-700 focus:outline-none p-3 m-0 text-white font-medium rounded\"\n                                    onClick={purchaseContinueHandler}\n                                >\n                                    Next\n                                </button>\n                            </>\n                        )}\n                    </div>\n                </main>\n                <Footer></Footer>\n            </div>\n        </>\n    );\n}\n\nexport default withRouter(PokemonDetail);\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, withRouter } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Header from \"../parts/Header\";\nimport ListPokemonItem from \"../parts/ListPokemonItem\";\nimport Footer from \"../parts/Footer\";\n\nimport Loading from \"../parts/Loading\";\n\nimport { initPokemon } from \"../store/actions/action.pokemon\";\n\nfunction MyPokemonList({ history }) {\n    const dispatch = useDispatch();\n    const POKEMON = useSelector((state) => state.pokemon);\n    const MYPOKEMON = useSelector((state) => state.mypokemon);\n\n    // const pokeChance = () => {\n    //     const pokeChance = [0, 1].sort(() => Math.random() - 0.5)[0];\n\n    //     if (pokeChance) console.log(\"Gotcha\");\n    //     else console.log(\"Oh failed, try again!\");\n    // };\n\n    // pokeChance();\n\n    useEffect(() => {\n        document.title = \"Front End || Pokemon List Page\";\n        window.scroll(0, 0);\n        dispatch(initPokemon({ url: POKEMON.url }));\n    }, [dispatch, POKEMON.url]);\n\n    const purchaseContinueHandler = () => {\n        // const payload = {\n        //     products: POKEMON.pokemons,\n        //     totalPokemonOwn: POKEMON.COUNTPokeOwn,\n        // };\n        // dispatch(initPokemon(payload));\n        history.push(\"/checkout\");\n    };\n\n    return (\n        <>\n            {POKEMON.loading === true && <Loading></Loading>}\n            <div className=\"site-container\">\n                <Header counter={MYPOKEMON.totalOwnPokemon}></Header>\n                <main className=\"site-content\">\n                    <>\n                        <div className=\"m-4\">\n                            <span className=\"text-gray-800 text-3xl font-extrabold\">\n                                Pokemon List\n                            </span>\n                        </div>\n                    </>\n                    {POKEMON.error === true && (\n                        <>\n                            <span className=\"text-center text-xl\">\n                                <h1>{POKEMON.message}</h1>\n                            </span>\n                        </>\n                    )}\n                    {POKEMON.error === false &&\n                        (POKEMON.count > 0 ? (\n                            <>\n                                <div className=\"flex m-4 gap-2 text-center font-bold text-gray-800\">\n                                    <span className=\"w-2/12 sm:w-1/12 py-2 bg-gray-400\">\n                                        No\n                                    </span>\n                                    <span className=\"w-6/12 sm:w-8/12 py-2 bg-gray-400\">\n                                        Pokemon\n                                    </span>\n                                    <span className=\"w-4/12 sm:w-3/12  py-2 bg-gray-400\">\n                                        Total\n                                    </span>\n                                </div>\n                                {Object.values(POKEMON.pokemons)?.map?.(\n                                    (item, index) => {\n                                        let str = item.url;\n                                        let res = str.split(\n                                            \"https://pokeapi.co/api/v2/pokemon/\"\n                                        );\n                                        let id = res[1].replace(\"/\", \"\");\n\n                                        return (\n                                            <div\n                                                className=\"ListPokemonItem hover:bg-blue-400 flex m-4 gap-2\"\n                                                key={index}\n                                            >\n                                                <ListPokemonItem\n                                                    pokemon={item.name}\n                                                    pokemonId={id}\n                                                    url={item.url}\n                                                    value={\n                                                        POKEMON.pokemons[index]\n                                                            .totalOwnPokemon\n                                                    }\n                                                    quantity={0}\n                                                    max={99}\n                                                    adjust={false}\n                                                    countering={index + 1}\n                                                ></ListPokemonItem>\n                                            </div>\n                                        );\n                                    }\n                                )}\n                                <p className=\"m-5 text-gray-700 font-bold text-xl\">\n                                    Total Pokemon : {POKEMON.count}\n                                </p>\n                            </>\n                        ) : (\n                            <>\n                                <p className=\"m-5 text-red-700 text-center text-2xl font-bold\">\n                                    Data Tidak Tersedia.\n                                </p>\n                                <p className=\"m-5 text-gray-700 font-bold text-xl\">\n                                    Total Pokemon : {POKEMON.count}\n                                </p>\n                            </>\n                        ))}\n                    <div className=\"flex justify-end m-5\">\n                        {POKEMON.error === false && (\n                            <>\n                                <button\n                                    className=\"bg-blue-500 hover:bg-blue-700 focus:outline-none p-3 m-0 text-white font-medium rounded\"\n                                    onClick={purchaseContinueHandler}\n                                >\n                                    Next\n                                </button>\n                            </>\n                        )}\n                    </div>\n                </main>\n                <Footer></Footer>\n            </div>\n        </>\n    );\n}\n\nexport default withRouter(MyPokemonList);\n","export default __webpack_public_path__ + \"static/media/notfound.41d99d1f.jpg\";","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport notfound from \"../assets/img/notfound.jpg\";\n\nexport default function NotFound() {\n    useEffect(() => {\n        document.title = \"Front End || Not Found Page\";\n        window.scroll(0, 0);\n    }, []);\n\n    return (\n        <section className=\"flex flex-col items-center h-screen\">\n            <img\n                className=\"object-contain h-56 md:h-full w-full\"\n                src={notfound}\n                alt=\"Oops we lost you\"\n            />\n            <h1 className=\"text-3xl text-gray-800 font-bold\">\n                Opps! We're lost\n            </h1>\n            <p className=\"mx-auto mt-4 text-lg text-center text-gray-600 mtb-8 lg:w-3/12 xl:w-2/12 font-semibold\">\n                The page that you requested is not found in our system.\n            </p>\n            <Link\n                className=\"px-6 py-3 mt-5 text-white transition-all duration-200 bg-red-400 shadow-inner hover:bg-red-500 focus:outline-none font-medium rounded\"\n                to=\"/\"\n            >\n                Back to Home\n            </Link>\n        </section>\n    );\n}\n","import React from \"react\";\nimport { createBrowserHistory } from \"history\";\n\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport \"./styles/style.scss\";\nimport \"./styles/main.css\";\n\nimport PokemonList from \"./pages/PokemonList\";\nimport PokemonDetail from \"./pages/PokemonDetail\";\nimport MyPokemonList from \"./pages/MyPokemonList\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n    const history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\n\n    return (\n        <>\n            <Router history={history}>\n                <Switch>\n                    <Route exact path=\"/\" component={PokemonList} />\n                    <Route\n                        exact\n                        path=\"/pokemon-detail\"\n                        component={PokemonDetail}\n                    />\n                    <Route\n                        exact\n                        path=\"/my-pokemon-list\"\n                        component={MyPokemonList}\n                    />\n                    <Route path=\"*\" component={NotFound}></Route>\n                </Switch>\n            </Router>\n\n            <ToastContainer />\n        </>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties,\n    };\n};\n","import * as actionTypesPokemon from \"../types/type.pokemon\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    loading: true,\n    SelectedPokemonLoading: true,\n    message: null,\n    total: 0,\n    pokemons: [],\n    selectedPokemon: {},\n    url: \"https://pokeapi.co/api/v2/pokemon\",\n    nextUrl: null,\n    prevUrl: null,\n    currentPage: 1,\n    error: false,\n};\n\nconst fetchPokemons = (state, action) => {\n    return updateObject(state, {\n        loading: true,\n        message: \"\",\n    });\n};\n\nconst fetchPokemonsSuccess = (state, action) => {\n    return updateObject(state, {\n        count: action.count,\n        pokemons: action.pokemons.map((o) => {\n            o.totalOwnPokemon = 0;\n            return o;\n        }),\n        nextUrl: action.next,\n        prevUrl: action.previous,\n        url: action.url,\n        message: action.message,\n        error: false,\n        loading: false,\n    });\n};\n\nconst fetchPokemonsFailed = (state, action) => {\n    return updateObject(state, {\n        status: \"error\",\n        message: action.message,\n        loading: false,\n        error: true,\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypesPokemon.FETCH_POKEMON_LIST:\n            return fetchPokemons(state, action);\n        case actionTypesPokemon.FETCH_POKEMON_LIST_SUCCESS:\n            return fetchPokemonsSuccess(state, action);\n        case actionTypesPokemon.FETCH_POKEMON_LIST_FAILED:\n            return fetchPokemonsFailed(state, action);\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import * as actionTypesMyPokemon from \"../types/type.mypokemon\";\nimport { updateObject } from \"../utility\";\n\nconst initialState = {\n    loading: true,\n    message: null,\n    pokemons: [],\n    totalOwnPokemon: 0,\n};\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n};\n\nexport default reducer;\n","import { combineReducers } from \"redux\";\nimport pokemon from \"./reducer.pokemon\";\nimport mypokemon from \"./reducer.mypokemon\";\n\nexport default combineReducers({\n    pokemon,\n    mypokemon,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst persistConfig = {\n    key: \"root\",\n    storage: storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n    const devTools =\n        process.env.NODE_ENV === \"production\"\n            ? applyMiddleware(...middleware)\n            : compose(\n                  applyMiddleware(...middleware),\n                  window.__REDUX_DEVTOOLS_EXTENSION__\n                      ? window.__REDUX_DEVTOOLS_EXTENSION__()\n                      : (f) => f\n              );\n\n    let store = createStore(persistedReducer, initialState, devTools);\n\n    let persistor = persistStore(store);\n    return { store, persistor };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\n// import store from \"./store\";\nimport { PersistGate } from \"redux-persist/lib/integration/react\";\nimport configureStore from \"./store\";\n\nlet { store, persistor } = configureStore();\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}